; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:file "riemann.log"})

;; ==== save stuff to elastic search 

(require '[org.httpkit.client :as http])

(defn do-thing [e]
  (println "----- DOING IT")
  (println "SERVICE" (:service e)))
  ; (println e))

(def sink
  (async-queue! 
    :elastic-search
    {:queue-size 10}
    do-thing))

; (println http)
; (println "IN CONFIG!!!")

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "0.0.0.0"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    index
    sink))
    ; #(info (:service %) "sef")))
    ; (where (service "cpu")
    ;   #(info (:service %) (:metric %)))
    ; (where (service "memory")
    ;   #(info (:service %) (:metric %)))
    
